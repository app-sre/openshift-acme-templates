---
apiVersion: v1
kind: Template
metadata:
  name: openshift-acme
objects:
- kind: ServiceAccount
  apiVersion: v1
  metadata:
    name: openshift-acme
    labels:
      app: openshift-acme
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    name: openshift-acme
    labels:
      app: openshift-acme
  rules:
  - apiGroups:
    - "route.openshift.io"
    resources:
    - routes
    verbs:
    - create
    - get
    - list
    - watch
    - update
    - patch
    - delete
    - deletecollection
  - apiGroups:
    - "route.openshift.io"
    resources:
    - routes/custom-host
    verbs:
    - create
  - apiGroups:
    - ""
    resources:
    - configmaps
    - services
    - secrets
    verbs:
    - create
    - get
    - list
    - watch
    - update
    - patch
    - delete
  - apiGroups:
    - ""
    resources:
    - limitranges
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - "apps"
    resources:
    - replicasets
    verbs:
    - create
    - get
    - list
    - watch
    - update
    - patch
    - delete
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    name: openshift-acme
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: openshift-acme
  subjects:
  - kind: ServiceAccount
    name: openshift-acme
- kind: Deployment
  apiVersion: apps/v1
  metadata:
    name: openshift-acme
    labels:
      app: openshift-acme
  spec:
    selector:
      matchLabels:
        app: openshift-acme
    replicas: 1
    strategy:
      type: RollingUpdate
    template:
      metadata:
        labels:
          app: openshift-acme
      spec:
        serviceAccountName: openshift-acme
        containers:
        - name: openshift-acme
          image: ${IMAGE}:${CONTROLLER_IMAGE_TAG}
          imagePullPolicy: Always
          args:
          - --exposer-image=${IMAGE}:${EXPOSER_IMAGE_TAG}
          - --loglevel=4
          - --namespace=$(CURRENT_NAMESPACE)
          env:
          - name: CURRENT_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          resources:
            requests:
              cpu: ${CPU_REQUESTS}
              memory: ${MEMORY_REQUESTS}
            limits:
              cpu: ${CPU_LIMITS}
              memory: ${MEMORY_LIMITS}
          # Force all pods to expire after a few days, to ensure we
          # get security updates
          livenessProbe:
            exec:
              command:
                - awk
                - {exit($1 > ${POD_EXPIRATION_DAYS} * 86400)}
                - /proc/uptime
- kind: ConfigMap
  apiVersion: v1
  metadata:
    name: letsencrypt-live
    annotations:
      "acme.openshift.io/priority": "100"
    labels:
      managed-by: "openshift-acme"
      type: "CertIssuer"
  data:
    "cert-issuer.types.acme.openshift.io": '{"type":"ACME","acmeCertIssuer":{"directoryUrl":"https://acme-v02.api.letsencrypt.org/directory"}}'
parameters:
- name: IMAGE
  value: quay.io/tnozicka/openshift-acme
- name: CONTROLLER_IMAGE_TAG
  value: controller
- name: EXPOSER_IMAGE_TAG
  value: exposer
- name: CPU_REQUESTS
  value: 50m
- name: MEMORY_REQUESTS
  value: 50Mi
- name: CPU_LIMITS
  value: 100m
- name: MEMORY_LIMITS
  value: 100Mi
- name: POD_EXPIRATION_DAYS
  value: 14
